/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      GroceryItem: GroceryItemObject
      GroceryCategory: GroceryCategoryObject
      GroceryItemConnection: GroceryItemConnectionObject
      PageInfo: PageInfoObject
      GroceryItemEdge: GroceryItemEdgeObject
      AggregateGroceryItem: AggregateGroceryItemObject
      GroceryCategoryConnection: GroceryCategoryConnectionObject
      GroceryCategoryEdge: GroceryCategoryEdgeObject
      AggregateGroceryCategory: AggregateGroceryCategoryObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      GroceryItemSubscriptionPayload: GroceryItemSubscriptionPayloadObject
      GroceryItemPreviousValues: GroceryItemPreviousValuesObject
      GroceryCategorySubscriptionPayload: GroceryCategorySubscriptionPayloadObject
      GroceryCategoryPreviousValues: GroceryCategoryPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      GroceryItem: GroceryItemFieldDetails
      GroceryCategory: GroceryCategoryFieldDetails
      GroceryItemConnection: GroceryItemConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      GroceryItemEdge: GroceryItemEdgeFieldDetails
      AggregateGroceryItem: AggregateGroceryItemFieldDetails
      GroceryCategoryConnection: GroceryCategoryConnectionFieldDetails
      GroceryCategoryEdge: GroceryCategoryEdgeFieldDetails
      AggregateGroceryCategory: AggregateGroceryCategoryFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      GroceryItemSubscriptionPayload: GroceryItemSubscriptionPayloadFieldDetails
      GroceryItemPreviousValues: GroceryItemPreviousValuesFieldDetails
      GroceryCategorySubscriptionPayload: GroceryCategorySubscriptionPayloadFieldDetails
      GroceryCategoryPreviousValues: GroceryCategoryPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      GroceryItemWhereUniqueInput: GroceryItemWhereUniqueInputInputObject
      GroceryItemWhereInput: GroceryItemWhereInputInputObject
      GroceryCategoryWhereInput: GroceryCategoryWhereInputInputObject
      GroceryCategoryWhereUniqueInput: GroceryCategoryWhereUniqueInputInputObject
      GroceryItemCreateInput: GroceryItemCreateInputInputObject
      GroceryCategoryCreateOneInput: GroceryCategoryCreateOneInputInputObject
      GroceryCategoryCreateInput: GroceryCategoryCreateInputInputObject
      GroceryItemUpdateInput: GroceryItemUpdateInputInputObject
      GroceryCategoryUpdateOneInput: GroceryCategoryUpdateOneInputInputObject
      GroceryCategoryUpdateDataInput: GroceryCategoryUpdateDataInputInputObject
      GroceryCategoryUpsertNestedInput: GroceryCategoryUpsertNestedInputInputObject
      GroceryItemUpdateManyMutationInput: GroceryItemUpdateManyMutationInputInputObject
      GroceryCategoryUpdateInput: GroceryCategoryUpdateInputInputObject
      GroceryCategoryUpdateManyMutationInput: GroceryCategoryUpdateManyMutationInputInputObject
      GroceryItemSubscriptionWhereInput: GroceryItemSubscriptionWhereInputInputObject
      GroceryCategorySubscriptionWhereInput: GroceryCategorySubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    GroceryItemOrderByInput: GroceryItemOrderByInputValues,
    GroceryCategoryOrderByInput: GroceryCategoryOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'groceryItem', args?: QueryGroceryItemArgs[] | false, alias?: string  } 
  | { name: 'groceryItems', args?: QueryGroceryItemsArgs[] | false, alias?: string  } 
  | { name: 'groceryItemsConnection', args?: QueryGroceryItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'groceryCategory', args?: QueryGroceryCategoryArgs[] | false, alias?: string  } 
  | { name: 'groceryCategories', args?: QueryGroceryCategoriesArgs[] | false, alias?: string  } 
  | { name: 'groceryCategoriesConnection', args?: QueryGroceryCategoriesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'groceryItem'
  | 'groceryItems'
  | 'groceryItemsConnection'
  | 'groceryCategory'
  | 'groceryCategories'
  | 'groceryCategoriesConnection'


type QueryGroceryItemArgs =
  | 'where'
type QueryGroceryItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGroceryItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGroceryCategoryArgs =
  | 'where'
type QueryGroceryCategoriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGroceryCategoriesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  groceryItem: {
    type: 'GroceryItem'
    args: Record<QueryGroceryItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: GroceryItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem | null> | prisma.GroceryItem | null
  }
  groceryItems: {
    type: 'GroceryItem'
    args: Record<QueryGroceryItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: GroceryItemWhereInput | null, orderBy?: prisma.GroceryItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem[]> | prisma.GroceryItem[]
  }
  groceryItemsConnection: {
    type: 'GroceryItemConnection'
    args: Record<QueryGroceryItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: GroceryItemWhereInput | null, orderBy?: prisma.GroceryItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItemConnection> | prisma.GroceryItemConnection
  }
  groceryCategory: {
    type: 'GroceryCategory'
    args: Record<QueryGroceryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: GroceryCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory | null> | prisma.GroceryCategory | null
  }
  groceryCategories: {
    type: 'GroceryCategory'
    args: Record<QueryGroceryCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: GroceryCategoryWhereInput | null, orderBy?: prisma.GroceryCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory[]> | prisma.GroceryCategory[]
  }
  groceryCategoriesConnection: {
    type: 'GroceryCategoryConnection'
    args: Record<QueryGroceryCategoriesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: GroceryCategoryWhereInput | null, orderBy?: prisma.GroceryCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategoryConnection> | prisma.GroceryCategoryConnection
  }
}
  

// Types for GroceryItem

type GroceryItemObject =
  | GroceryItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'count', args?: [] | false, alias?: string  } 
  | { name: 'expiration', args?: [] | false, alias?: string  } 
  | { name: 'UPC', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 

type GroceryItemFields =
  | 'id'
  | 'name'
  | 'description'
  | 'count'
  | 'expiration'
  | 'UPC'
  | 'category'



  

export interface GroceryItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  count: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  expiration: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  UPC: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  category: {
    type: 'GroceryCategory'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GroceryItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory | null> | prisma.GroceryCategory | null
  }
}
  

// Types for GroceryCategory

type GroceryCategoryObject =
  | GroceryCategoryFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'units', args?: [] | false, alias?: string  } 

type GroceryCategoryFields =
  | 'id'
  | 'name'
  | 'description'
  | 'units'



  

export interface GroceryCategoryFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  units: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for GroceryItemConnection

type GroceryItemConnectionObject =
  | GroceryItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type GroceryItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface GroceryItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'GroceryItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItemEdge[]> | prisma.GroceryItemEdge[]
  }
  aggregate: {
    type: 'AggregateGroceryItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateGroceryItem> | prisma.AggregateGroceryItem
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for GroceryItemEdge

type GroceryItemEdgeObject =
  | GroceryItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type GroceryItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface GroceryItemEdgeFieldDetails {
  node: {
    type: 'GroceryItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem> | prisma.GroceryItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateGroceryItem

type AggregateGroceryItemObject =
  | AggregateGroceryItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateGroceryItemFields =
  | 'count'



  

export interface AggregateGroceryItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for GroceryCategoryConnection

type GroceryCategoryConnectionObject =
  | GroceryCategoryConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type GroceryCategoryConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface GroceryCategoryConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'GroceryCategoryEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategoryEdge[]> | prisma.GroceryCategoryEdge[]
  }
  aggregate: {
    type: 'AggregateGroceryCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateGroceryCategory> | prisma.AggregateGroceryCategory
  }
}
  

// Types for GroceryCategoryEdge

type GroceryCategoryEdgeObject =
  | GroceryCategoryEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type GroceryCategoryEdgeFields =
  | 'node'
  | 'cursor'



  

export interface GroceryCategoryEdgeFieldDetails {
  node: {
    type: 'GroceryCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryCategoryEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory> | prisma.GroceryCategory
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateGroceryCategory

type AggregateGroceryCategoryObject =
  | AggregateGroceryCategoryFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateGroceryCategoryFields =
  | 'count'



  

export interface AggregateGroceryCategoryFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createGroceryItem', args?: MutationCreateGroceryItemArgs[] | false, alias?: string  } 
  | { name: 'updateGroceryItem', args?: MutationUpdateGroceryItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyGroceryItems', args?: MutationUpdateManyGroceryItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertGroceryItem', args?: MutationUpsertGroceryItemArgs[] | false, alias?: string  } 
  | { name: 'deleteGroceryItem', args?: MutationDeleteGroceryItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyGroceryItems', args?: MutationDeleteManyGroceryItemsArgs[] | false, alias?: string  } 
  | { name: 'createGroceryCategory', args?: MutationCreateGroceryCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateGroceryCategory', args?: MutationUpdateGroceryCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateManyGroceryCategories', args?: MutationUpdateManyGroceryCategoriesArgs[] | false, alias?: string  } 
  | { name: 'upsertGroceryCategory', args?: MutationUpsertGroceryCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteGroceryCategory', args?: MutationDeleteGroceryCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteManyGroceryCategories', args?: MutationDeleteManyGroceryCategoriesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createGroceryItem'
  | 'updateGroceryItem'
  | 'updateManyGroceryItems'
  | 'upsertGroceryItem'
  | 'deleteGroceryItem'
  | 'deleteManyGroceryItems'
  | 'createGroceryCategory'
  | 'updateGroceryCategory'
  | 'updateManyGroceryCategories'
  | 'upsertGroceryCategory'
  | 'deleteGroceryCategory'
  | 'deleteManyGroceryCategories'


type MutationCreateGroceryItemArgs =
  | 'data'
type MutationUpdateGroceryItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyGroceryItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertGroceryItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteGroceryItemArgs =
  | 'where'
type MutationDeleteManyGroceryItemsArgs =
  | 'where'
type MutationCreateGroceryCategoryArgs =
  | 'data'
type MutationUpdateGroceryCategoryArgs =
  | 'data'
  | 'where'
type MutationUpdateManyGroceryCategoriesArgs =
  | 'data'
  | 'where'
type MutationUpsertGroceryCategoryArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteGroceryCategoryArgs =
  | 'where'
type MutationDeleteManyGroceryCategoriesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createGroceryItem: {
    type: 'GroceryItem'
    args: Record<MutationCreateGroceryItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GroceryItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem> | prisma.GroceryItem
  }
  updateGroceryItem: {
    type: 'GroceryItem'
    args: Record<MutationUpdateGroceryItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GroceryItemUpdateInput, where: GroceryItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem | null> | prisma.GroceryItem | null
  }
  updateManyGroceryItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyGroceryItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GroceryItemUpdateManyMutationInput, where?: GroceryItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertGroceryItem: {
    type: 'GroceryItem'
    args: Record<MutationUpsertGroceryItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: GroceryItemWhereUniqueInput, create: GroceryItemCreateInput, update: GroceryItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem> | prisma.GroceryItem
  }
  deleteGroceryItem: {
    type: 'GroceryItem'
    args: Record<MutationDeleteGroceryItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: GroceryItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem | null> | prisma.GroceryItem | null
  }
  deleteManyGroceryItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyGroceryItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: GroceryItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createGroceryCategory: {
    type: 'GroceryCategory'
    args: Record<MutationCreateGroceryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GroceryCategoryCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory> | prisma.GroceryCategory
  }
  updateGroceryCategory: {
    type: 'GroceryCategory'
    args: Record<MutationUpdateGroceryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GroceryCategoryUpdateInput, where: GroceryCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory | null> | prisma.GroceryCategory | null
  }
  updateManyGroceryCategories: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyGroceryCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: GroceryCategoryUpdateManyMutationInput, where?: GroceryCategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertGroceryCategory: {
    type: 'GroceryCategory'
    args: Record<MutationUpsertGroceryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: GroceryCategoryWhereUniqueInput, create: GroceryCategoryCreateInput, update: GroceryCategoryUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory> | prisma.GroceryCategory
  }
  deleteGroceryCategory: {
    type: 'GroceryCategory'
    args: Record<MutationDeleteGroceryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: GroceryCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory | null> | prisma.GroceryCategory | null
  }
  deleteManyGroceryCategories: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyGroceryCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: GroceryCategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'groceryItem', args?: SubscriptionGroceryItemArgs[] | false, alias?: string  } 
  | { name: 'groceryCategory', args?: SubscriptionGroceryCategoryArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'groceryItem'
  | 'groceryCategory'


type SubscriptionGroceryItemArgs =
  | 'where'
type SubscriptionGroceryCategoryArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  groceryItem: {
    type: 'GroceryItemSubscriptionPayload'
    args: Record<SubscriptionGroceryItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: GroceryItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItemSubscriptionPayload | null> | prisma.GroceryItemSubscriptionPayload | null
  }
  groceryCategory: {
    type: 'GroceryCategorySubscriptionPayload'
    args: Record<SubscriptionGroceryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: GroceryCategorySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategorySubscriptionPayload | null> | prisma.GroceryCategorySubscriptionPayload | null
  }
}
  

// Types for GroceryItemSubscriptionPayload

type GroceryItemSubscriptionPayloadObject =
  | GroceryItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type GroceryItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface GroceryItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'GroceryItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GroceryItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItem | null> | prisma.GroceryItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'GroceryItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GroceryItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryItemPreviousValues | null> | prisma.GroceryItemPreviousValues | null
  }
}
  

// Types for GroceryItemPreviousValues

type GroceryItemPreviousValuesObject =
  | GroceryItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'count', args?: [] | false, alias?: string  } 
  | { name: 'expiration', args?: [] | false, alias?: string  } 
  | { name: 'UPC', args?: [] | false, alias?: string  } 

type GroceryItemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'count'
  | 'expiration'
  | 'UPC'



  

export interface GroceryItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  count: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  expiration: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  UPC: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for GroceryCategorySubscriptionPayload

type GroceryCategorySubscriptionPayloadObject =
  | GroceryCategorySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type GroceryCategorySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface GroceryCategorySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"GroceryCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'GroceryCategory'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GroceryCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategory | null> | prisma.GroceryCategory | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'GroceryCategoryPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"GroceryCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.GroceryCategoryPreviousValues | null> | prisma.GroceryCategoryPreviousValues | null
  }
}
  

// Types for GroceryCategoryPreviousValues

type GroceryCategoryPreviousValuesObject =
  | GroceryCategoryPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'units', args?: [] | false, alias?: string  } 

type GroceryCategoryPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'units'



  

export interface GroceryCategoryPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  units: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface GroceryItemWhereUniqueInput {
  id?: string | null
}
export type GroceryItemWhereUniqueInputInputObject =
  | Extract<keyof GroceryItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface GroceryItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  count?: number | null
  count_not?: number | null
  count_in?: number[]
  count_not_in?: number[]
  count_lt?: number | null
  count_lte?: number | null
  count_gt?: number | null
  count_gte?: number | null
  expiration?: string | null
  expiration_not?: string | null
  expiration_in?: string[]
  expiration_not_in?: string[]
  expiration_lt?: string | null
  expiration_lte?: string | null
  expiration_gt?: string | null
  expiration_gte?: string | null
  UPC?: string | null
  UPC_not?: string | null
  UPC_in?: string[]
  UPC_not_in?: string[]
  UPC_lt?: string | null
  UPC_lte?: string | null
  UPC_gt?: string | null
  UPC_gte?: string | null
  UPC_contains?: string | null
  UPC_not_contains?: string | null
  UPC_starts_with?: string | null
  UPC_not_starts_with?: string | null
  UPC_ends_with?: string | null
  UPC_not_ends_with?: string | null
  category?: GroceryCategoryWhereInput | null
  AND?: GroceryItemWhereInput[]
}
export type GroceryItemWhereInputInputObject =
  | Extract<keyof GroceryItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'count', alias?: string  } 
  | { name: 'count_not', alias?: string  } 
  | { name: 'count_in', alias?: string  } 
  | { name: 'count_not_in', alias?: string  } 
  | { name: 'count_lt', alias?: string  } 
  | { name: 'count_lte', alias?: string  } 
  | { name: 'count_gt', alias?: string  } 
  | { name: 'count_gte', alias?: string  } 
  | { name: 'expiration', alias?: string  } 
  | { name: 'expiration_not', alias?: string  } 
  | { name: 'expiration_in', alias?: string  } 
  | { name: 'expiration_not_in', alias?: string  } 
  | { name: 'expiration_lt', alias?: string  } 
  | { name: 'expiration_lte', alias?: string  } 
  | { name: 'expiration_gt', alias?: string  } 
  | { name: 'expiration_gte', alias?: string  } 
  | { name: 'UPC', alias?: string  } 
  | { name: 'UPC_not', alias?: string  } 
  | { name: 'UPC_in', alias?: string  } 
  | { name: 'UPC_not_in', alias?: string  } 
  | { name: 'UPC_lt', alias?: string  } 
  | { name: 'UPC_lte', alias?: string  } 
  | { name: 'UPC_gt', alias?: string  } 
  | { name: 'UPC_gte', alias?: string  } 
  | { name: 'UPC_contains', alias?: string  } 
  | { name: 'UPC_not_contains', alias?: string  } 
  | { name: 'UPC_starts_with', alias?: string  } 
  | { name: 'UPC_not_starts_with', alias?: string  } 
  | { name: 'UPC_ends_with', alias?: string  } 
  | { name: 'UPC_not_ends_with', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  
export interface GroceryCategoryWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  units?: string | null
  units_not?: string | null
  units_in?: string[]
  units_not_in?: string[]
  units_lt?: string | null
  units_lte?: string | null
  units_gt?: string | null
  units_gte?: string | null
  units_contains?: string | null
  units_not_contains?: string | null
  units_starts_with?: string | null
  units_not_starts_with?: string | null
  units_ends_with?: string | null
  units_not_ends_with?: string | null
  AND?: GroceryCategoryWhereInput[]
}
export type GroceryCategoryWhereInputInputObject =
  | Extract<keyof GroceryCategoryWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'units', alias?: string  } 
  | { name: 'units_not', alias?: string  } 
  | { name: 'units_in', alias?: string  } 
  | { name: 'units_not_in', alias?: string  } 
  | { name: 'units_lt', alias?: string  } 
  | { name: 'units_lte', alias?: string  } 
  | { name: 'units_gt', alias?: string  } 
  | { name: 'units_gte', alias?: string  } 
  | { name: 'units_contains', alias?: string  } 
  | { name: 'units_not_contains', alias?: string  } 
  | { name: 'units_starts_with', alias?: string  } 
  | { name: 'units_not_starts_with', alias?: string  } 
  | { name: 'units_ends_with', alias?: string  } 
  | { name: 'units_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  
export interface GroceryCategoryWhereUniqueInput {
  id?: string | null
  name?: string | null
}
export type GroceryCategoryWhereUniqueInputInputObject =
  | Extract<keyof GroceryCategoryWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface GroceryItemCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  count?: number | null
  expiration?: string | null
  UPC?: string | null
  category?: GroceryCategoryCreateOneInput | null
}
export type GroceryItemCreateInputInputObject =
  | Extract<keyof GroceryItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'count', alias?: string  } 
  | { name: 'expiration', alias?: string  } 
  | { name: 'UPC', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface GroceryCategoryCreateOneInput {
  create?: GroceryCategoryCreateInput | null
  connect?: GroceryCategoryWhereUniqueInput | null
}
export type GroceryCategoryCreateOneInputInputObject =
  | Extract<keyof GroceryCategoryCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface GroceryCategoryCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  units?: string | null
}
export type GroceryCategoryCreateInputInputObject =
  | Extract<keyof GroceryCategoryCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'units', alias?: string  } 
  
export interface GroceryItemUpdateInput {
  name?: string | null
  description?: string | null
  count?: number | null
  expiration?: string | null
  UPC?: string | null
  category?: GroceryCategoryUpdateOneInput | null
}
export type GroceryItemUpdateInputInputObject =
  | Extract<keyof GroceryItemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'count', alias?: string  } 
  | { name: 'expiration', alias?: string  } 
  | { name: 'UPC', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface GroceryCategoryUpdateOneInput {
  create?: GroceryCategoryCreateInput | null
  update?: GroceryCategoryUpdateDataInput | null
  upsert?: GroceryCategoryUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: GroceryCategoryWhereUniqueInput | null
}
export type GroceryCategoryUpdateOneInputInputObject =
  | Extract<keyof GroceryCategoryUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface GroceryCategoryUpdateDataInput {
  name?: string | null
  description?: string | null
  units?: string | null
}
export type GroceryCategoryUpdateDataInputInputObject =
  | Extract<keyof GroceryCategoryUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'units', alias?: string  } 
  
export interface GroceryCategoryUpsertNestedInput {
  update?: GroceryCategoryUpdateDataInput
  create?: GroceryCategoryCreateInput
}
export type GroceryCategoryUpsertNestedInputInputObject =
  | Extract<keyof GroceryCategoryUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface GroceryItemUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  count?: number | null
  expiration?: string | null
  UPC?: string | null
}
export type GroceryItemUpdateManyMutationInputInputObject =
  | Extract<keyof GroceryItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'count', alias?: string  } 
  | { name: 'expiration', alias?: string  } 
  | { name: 'UPC', alias?: string  } 
  
export interface GroceryCategoryUpdateInput {
  name?: string | null
  description?: string | null
  units?: string | null
}
export type GroceryCategoryUpdateInputInputObject =
  | Extract<keyof GroceryCategoryUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'units', alias?: string  } 
  
export interface GroceryCategoryUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  units?: string | null
}
export type GroceryCategoryUpdateManyMutationInputInputObject =
  | Extract<keyof GroceryCategoryUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'units', alias?: string  } 
  
export interface GroceryItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: GroceryItemWhereInput | null
  AND?: GroceryItemSubscriptionWhereInput[]
}
export type GroceryItemSubscriptionWhereInputInputObject =
  | Extract<keyof GroceryItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  
export interface GroceryCategorySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: GroceryCategoryWhereInput | null
  AND?: GroceryCategorySubscriptionWhereInput[]
}
export type GroceryCategorySubscriptionWhereInputInputObject =
  | Extract<keyof GroceryCategorySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  

export type GroceryItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'count_ASC'
  | 'count_DESC'
  | 'expiration_ASC'
  | 'expiration_DESC'
  | 'UPC_ASC'
  | 'UPC_DESC'
  
export type GroceryCategoryOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'units_ASC'
  | 'units_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  